tasks:
  help:
    quiet: true
    run: |
      cat >/dev/stdout <<'EOF'
      This repo only contains some basic dlang learning material by example.
      I keep it updated with my latest experiments.

      to bootstrap a new test:
        tusk bootstrap NAME

      to remove a test:
        tusk purge NAME

      to compile and execute a test:
        tusk run NAME
      EOF
  bootstrap:
    args:
      name:
        type: string

    options:
      id:
        type: int
        default:
          command: echo "$(find . -not -path '*/[@.]*' -type d | wc -l) + 0" | bc
      internal_name:
        type: string
        default:
          command: echo "${id}-${name}"
    run:
      - when:
          - not-exists: ${internal_name}
        command:
          - exec: |
              if grep -q "${name}:" .store ; then
                echo "a project with name ${name} already appears in .store index." ;
                exit 1
              fi
          - exec: mkdir ${internal_name}
          - exec: touch ${internal_name}/main.d
          - exec: |-
              cat > ${internal_name}/main.d <<'EOF'
              import std.stdio;
              import helpers.xhelpers;

              void main() {
                writeln("hello from ${name}");
              }
              EOF
          - exec: echo "${name}:${internal_name}" >> .store

  purge:
    args:
      name:
        type: string

    options:
      internal_id:
        type: string
        default:
          command: grep "${name}" .store | cut -d ':' -f2

    run:
      - when:
          - exists: ${internal_id}
        command:
          - exec: rm -rf ${internal_id}
          - exec: grep -v "${name}" .store > .store

  run:
    args:
      name:
        type: string

    options:
      internal_id:
        type: string
        default:
          command: grep "${name}" .store | cut -d ':' -f2
    run:
      - when:
          - exists: ${internal_id}
        command:
          - exec: nl ${internal_id}/*
          - exec: ldc2 ${internal_id}/main.d ./helpers/xhelpers.d -of=${internal_id}/.build/main
          - exec: exec ${internal_id}/.build/main
          - exec: |
              echo "exit-code: $?"
            quiet: true
          - exec: |
              echo "size: $(du -sh ${internal_id}/.build/main)"
            quiet: true
